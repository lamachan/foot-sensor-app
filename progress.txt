done:
* redis data fetching
* multiple sensors
* multiple patients
* patient info
* line graphs for all sensors
* pages
* custom component boilerplate
* custom component circles (changing colours and sizes)
* anomaly history for 1 patient
* anomaly history for concurrent patients
* timestamped data
* anomaly streak separation in live data
* anomaly history streak order (buttons)
* fetching ready data from redis at page load (more that just 1 row)
- zmiany w przyciskach na anomaly history
- zmiana sposobu przechowywania danych na memory w kliencie (anomaly streak_id, live patient_data)
- wielowątkowe pobierane danych w aplikacji

problems:
* [OLD]:
    * timeouts during fetching data
    * duplicate data (by trace id)
    * missing data points (by trace id)

to do:
* custom component feet diagram (draw feet image, import feet image, place circles in the right places)
* nice layout (homepages, patient pages)
* docker (maybe)
* documentation (user manual + architecture description)
* report (design - NOTION)

- zmiana identyfikacji pomiaru na odkodowane trace_id
- ewentualna interpolacja/ekstrapolacja/aproksymacja brakujących pomiarów (po trace_id)
- callback od razu po fetch_all_data
- n_intervals - problem, gdy nie odświeżymy strony przy ponownym uruchomieniu aplikacji

konsultacje:
* data fetching - wątki w aplikacji (multiprocessing), nie oddzielny skrypt
* oś x - odkodowany timestamp z api (trace id)
* braki w timestampie - interpolacja, ekstrapolacja lub aproksymacja dziur, ewentualnie zostawienie ich pustych